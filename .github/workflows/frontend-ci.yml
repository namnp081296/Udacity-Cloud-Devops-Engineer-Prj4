name: ci-front-end-workflow
on:
  pull_requests:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:
    inputs:
      trigger-ci:
        description: 'Manually trigger CI'
        required: false
        default: 'false'
jobs:
  ci_fe_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Run Lint code
        run: |
          cd starter/frontend
          npm install
          npm run lint

  ci_fe_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Run Test code
        run: |
          cd starter/frontend
          npm install
          npm run test

  ci_fe_build:
    runs-on: ubuntu-latest
    needs: [ci_fe_lint, ci_fe_test]
    if: ${{ success() && needs.ci_fe_lint.result == 'success' && needs.ci_fe_test.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install Dependencies
        run: |
          cd starter/frontend
          npm install
          npm run test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build application with Docker
        run: |
          docker build \
            --build-arg REACT_APP_MOVIE_API_URL=${{ secrets.MOVIE_API_URL }} \
            -t ${{ IMAGE_NAME }}:${{ github.sha }} .
 