name: ci-front-end-workflow
on:
  pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  ci_fe_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: starter/frontend/package-lock.json
      
      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run Lint code
        run: npm run lint
        working-directory: starter/frontend

  ci_fe_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: starter/frontend/package-lock.json
      
      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run Test code
        run: npm run test
        working-directory: starter/frontend

  ci_fe_build:
    runs-on: ubuntu-latest
    needs: [ci_fe_lint, ci_fe_test]
    if: ${{ success() && needs.ci_fe_lint.result == 'success' && needs.ci_fe_test.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install Dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run Test code
        run: npm run test
        working-directory: starter/frontend
      
      # After Pass the Test Suite, Process to build the Docker image
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
      
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_DEFAULT_REGION }}.amazonaws.com/frontend
          tags: |
            type=sha 
      
      - name: Build the Docker image
        uses: docker/build-push-action@v5
        with:
          push: false
          context: starter/frontend
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }}
 